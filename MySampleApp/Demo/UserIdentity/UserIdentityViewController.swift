//
//  UserIdentityViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.10
//

import Foundation
import UIKit
import AWSMobileHubHelper
import AWSS3
import AWSCognitoIdentityProvider

class UserIdentityViewController: UIViewController {
    @IBOutlet weak var userImageView: UIImageView!
    @IBOutlet weak var userName: UILabel!
    // MARK: - View lifecycle
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        let identityManager = AWSIdentityManager.default()
        
        if let identityUserName = identityManager.userName {
            userName.text = identityUserName
        } else {
            userName.text = NSLocalizedString("Guest User", comment: "Placeholder text for the guest user.")
        }
        
        let pool = AWSCognitoIdentityUserPool.init(forKey: AWSCognitoUserPoolsSignInProviderKey)
        let user = pool.getUser(userName.text!)
        user.getDetails().continueWith { (task) -> AnyObject! in
            let response = task.result
            for attribute in (response?.userAttributes)! {
                if attribute.name == "picture" {
                    let transferManager = AWSS3TransferManager.default()
                    let downloadingFileURL = URL(fileURLWithPath: NSTemporaryDirectory()).appendingPathComponent("vescle.jpg")
                    let downloadRequest = AWSS3TransferManagerDownloadRequest()
                    print(S3BucketName)
                    downloadRequest?.bucket = S3BucketName
                    downloadRequest?.key = attribute.value
                    print(attribute.value)
                    
                    downloadRequest?.downloadingFileURL = downloadingFileURL
                    
                    transferManager.download(downloadRequest!).continueWith(executor: AWSExecutor.mainThread(), block: { (task:AWSTask<AnyObject>) -> Any? in
                        
                        if let error = task.error as? NSError {
                            if error.domain == AWSS3TransferManagerErrorDomain, let code = AWSS3TransferManagerErrorType(rawValue: error.code) {
                                switch code {
                                case .cancelled, .paused:
                                    break
                                default:
                                    print("Error downloading: \(downloadRequest?.key) Error: \(error)")
                                }
                            } else {
                                print("Error downloading: \(downloadRequest?.key) Error: \(error)")
                            }
                            return nil
                        }
                        print("Download complete for: \(downloadRequest?.key)")
                        self.userImageView.image = UIImage(contentsOfFile: downloadingFileURL.path)
                        return nil
                    })


                }
            }
            return nil
        }
        
        super.viewWillAppear(animated)
    }
    
    
}

